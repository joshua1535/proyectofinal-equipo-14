{"version":3,"sources":["pages/Admin/Admin.module.css","pages/UpdatePost/UpdatePost.module.css","pages/OwnPosts/OwnPosts.module.css","Components/PostCard/PostCard.module.css","pages/Favorites/Favorites.module.css","pages/User/User.module.css","pages/Login/Login.module.css","pages/NotFound/NotFound.module.css","Services/user.services.js","context/userContext.js","assets/images/Solo_logo.png","assets/images/Login-Images.png","pages/Login/Login.jsx","pages/Redirect/RedirectPage.jsx","assets/images/Error-NotFound.png","pages/NotFound/NotFound.jsx","Services/posts.Services.js","Hooks/useInfiniteScroll.js","Components/PostCard/PostCard.jsx","pages/Admin/Admin.jsx","pages/User/User.jsx","pages/UpdatePost/UpdatePost.jsx","pages/Favorites/Favorites.jsx","pages/OwnPosts/OwnPosts.jsx","Components/Private/Private.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","BASE_URL","userService","login","userName","pass","a","fetch","method","headers","body","JSON","stringify","username","password","response","ok","json","data","verifyToken","token","UserContext","React","createContext","UserProvider","props","useState","undefined","setToken","user","setUser","useEffect","verifyTokenAsync","lsToken","getToken","role","setTokenAll","newToken","localStorage","setItem","removeItem","useCallback","loginAsync","status","tokenRes","console","error","logout","value","useMemo","Provider","useUserContext","context","useContext","Error","getItem","Login","setUsername","setPassword","setError","onChange","e","save","target","onSubmitHandler","preventDefault","logged","replace","to","className","classes","src","solo_logo","alt","login_image","onSubmit","type","placeholder","rolePages","RedirectUser","NotFound","navigate","useNavigate","onClick","postService","createPost","title","description","image","getOwnedPosts","limit","page","updatePost","id","newTitle","newDescription","newImage","toggleActivePost","getAllPosts","getAllFavorite","getAllFavoriteId","postIdArray","promisesArray","favorites","map","getPost","Promise","all","results","getOnePost","like","favorite","addComment","comment","useInfiniteSrcoll","pageNumber","inOwnPostPage","loading","setLoading","posts","setPosts","hasMore","setHasMore","prevPosts","length","toast","configure","autoClose","Card","post","_id","currentPostId","likes","comments","addLike","addFav","toggleStatus","editPost","typeRole","currentUsername","post_status","own","setOwn","postcomments","setPostComments","showcomments","setShowComments","usercomment","setUserComment","showDelete","setShowDelete","showFav","setShowFav","forEach","onSubmitCommentHandler","CustomToastLike","log","position","POSITION","BOTTOM_CENTER","Admin","setTitle","setDescription","setImage","setPage","setPost","useInfiniteScroll","observer","useRef","lastPostRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","addLikeHandler","Own","message","newPost","p","splice","indexOf","push","addFavHandler","includes","disFavPost","favPost","toggleStatusHandler","active","togglePost","showPost","CustomToastShow","addCommentHandler","commentPost","CustomToastPost","CustomToastLogOut","CustomToastToggle","CustomToastFav","CustomToastDisFav","CustomToastComment","window","location","reload","index","ref","oldTitle","oldDescription","oldImage","name","User","messageRes","msg","UpdatePopUp","setId","goBackHandler","Favorites","getFavs","favs","filteredFavs","filter","fav","PrivateRoute","children","App","path","element","RedirectPage","Private","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cfe06ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section-container\":\"Admin_section-container__33v1k\",\"admin-container\":\"Admin_admin-container__cA9tD\",\"header-admin\":\"Admin_header-admin__1mzxB\",\"header-admin__logo\":\"Admin_header-admin__logo__3bQ-g\",\"logout-container\":\"Admin_logout-container__2aaxh\",\"logo-header\":\"Admin_logo-header__14_Od\",\"title-header\":\"Admin_title-header__1J0zk\",\"user-title\":\"Admin_user-title__2KPvu\",\"form-createPost\":\"Admin_form-createPost__8lfG8\",\"createPost-title\":\"Admin_createPost-title__1kGgW\",\"input-container\":\"Admin_input-container__30__n\",\"description-input\":\"Admin_description-input__2RIAX\",\"title-section\":\"Admin_title-section__2wtK8\",\"title-input\":\"Admin_title-input__3pz4E\",\"container-createPost_button\":\"Admin_container-createPost_button__28qqO\",\"button-createPost\":\"Admin_button-createPost__2S-zD\",\"toast-notification-container\":\"Admin_toast-notification-container__32bBm\",\"toast-notification-text-container\":\"Admin_toast-notification-text-container__14Opl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"update\":\"UpdatePost_update__3pfwS\",\"update-container\":\"UpdatePost_update-container__3NX3Q\",\"header-update\":\"UpdatePost_header-update__3C1jX\",\"header-update__logo\":\"UpdatePost_header-update__logo__wviWa\",\"logout-container\":\"UpdatePost_logout-container__1pNzU\",\"logo-header\":\"UpdatePost_logo-header__2NKQ-\",\"title-header\":\"UpdatePost_title-header__3NCev\",\"user-title\":\"UpdatePost_user-title__26PQv\",\"header-update-title\":\"UpdatePost_header-update-title__1acV4\",\"update-title\":\"UpdatePost_update-title__3o-FX\",\"form-createPost\":\"UpdatePost_form-createPost__oD7d8\",\"createPost-title\":\"UpdatePost_createPost-title__2S35M\",\"input-container\":\"UpdatePost_input-container__1ocX9\",\"description-input\":\"UpdatePost_description-input__2EyvQ\",\"title-section\":\"UpdatePost_title-section__hRiAl\",\"title-input\":\"UpdatePost_title-input__3kMa5\",\"container-createPost_button\":\"UpdatePost_container-createPost_button__3gjHd\",\"button-createPost\":\"UpdatePost_button-createPost__ebOIR\",\"button-cancel-createPost\":\"UpdatePost_button-cancel-createPost__1esgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ownposts\":\"OwnPosts_ownposts__2qFoZ\",\"header-ownposts\":\"OwnPosts_header-ownposts__3Rw1F\",\"header-ownposts__logo\":\"OwnPosts_header-ownposts__logo__15CyJ\",\"logout-container\":\"OwnPosts_logout-container__NJT1C\",\"logo-header\":\"OwnPosts_logo-header__2taji\",\"title-header\":\"OwnPosts_title-header__1fjKA\",\"header-ownposts-title\":\"OwnPosts_header-ownposts-title__ftwLY\",\"user-title\":\"OwnPosts_user-title__m6EyY\",\"ownposts-container\":\"OwnPosts_ownposts-container__1xl9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toast-notification-container\":\"PostCard_toast-notification-container__1XSRu\",\"toast-notification-text-container\":\"PostCard_toast-notification-text-container__AmiQ1\",\"posts-container-general\":\"PostCard_posts-container-general__1ZKEL\",\"username-post-container\":\"PostCard_username-post-container__disaD\",\"title-post-container\":\"PostCard_title-post-container__1hdGI\",\"img-post-container\":\"PostCard_img-post-container__CGR4t\",\"description-post-container\":\"PostCard_description-post-container__239MJ\",\"footer-post-container\":\"PostCard_footer-post-container__cLIJ8\",\"likes-container\":\"PostCard_likes-container__2__WC\",\"comments-container\":\"PostCard_comments-container__1mRQf\",\"fav-container\":\"PostCard_fav-container__2_4_U\",\"lenght-container\":\"PostCard_lenght-container__177Rd\",\"title-add-comment\":\"PostCard_title-add-comment__1eaZT\",\"container-add-comment\":\"PostCard_container-add-comment__3MqGJ\",\"form-add-comment\":\"PostCard_form-add-comment__pQCYA\",\"input-add-comment\":\"PostCard_input-add-comment__2Wbr5\",\"post-comment\":\"PostCard_post-comment__2YNZT\",\"button-add-comment\":\"PostCard_button-add-comment__3tBNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favorites\":\"Favorites_favorites__3QR4x\",\"header-favorites\":\"Favorites_header-favorites__3mxEC\",\"header-favorites__logo\":\"Favorites_header-favorites__logo__vFTsz\",\"logout-container\":\"Favorites_logout-container__Q0dkg\",\"logo-header\":\"Favorites_logo-header__1zFnx\",\"title-header\":\"Favorites_title-header__2dYWJ\",\"header-favorites-title\":\"Favorites_header-favorites-title__3Znwe\",\"user-title\":\"Favorites_user-title__3jJqu\",\"favorites-container\":\"Favorites_favorites-container__3NPFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section-container\":\"User_section-container__TO1jW\",\"user-container\":\"User_user-container__3dFuP\",\"header-user\":\"User_header-user__1Q5Mp\",\"header-user__logo\":\"User_header-user__logo__Pu3Dw\",\"logout-container\":\"User_logout-container__1LYba\",\"logo-header\":\"User_logo-header__KsjIf\",\"title-header\":\"User_title-header__5ld6t\",\"user-title\":\"User_user-title__1KuKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo-header\":\"Login_logo-header__1mHFY\",\"title-header\":\"Login_title-header__23-Ky\",\"login-container\":\"Login_login-container__MoS_K\",\"main-container\":\"Login_main-container__1Xc9X\",\"section-login\":\"Login_section-login__UW_zI\",\"form\":\"Login_form__3bufY\",\"h2\":\"Login_h2__1YBkx\",\"login-img\":\"Login_login-img__1lvET\",\"login-images\":\"Login_login-images__2Ahm8\",\"logo-container\":\"Login_logo-container__2Za1g\",\"login-input\":\"Login_login-input__34mfL\",\"error-login\":\"Login_error-login__1pMm8\",\"login-button\":\"Login_login-button__1NeW3\",\"form-footer\":\"Login_form-footer__dkH_N\",\"footer-text-login\":\"Login_footer-text-login__yZsgt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container-notfound\":\"NotFound_container-notfound__108PE\",\"title-notfound\":\"NotFound_title-notfound__3sbC6\",\"img-notfound\":\"NotFound_img-notfound__3baB7\",\"notfound\":\"NotFound_notfound__2tgqV\",\"text-notfound-container\":\"NotFound_text-notfound-container__1jHWz\",\"text-notfound\":\"NotFound_text-notfound__1tWYr\",\"subtext-notfound\":\"NotFound_subtext-notfound__fTI4Y\",\"button-notfound\":\"NotFound_button-notfound__2jR6y\"};","const BASE_URL = \"https://posts-pw2021.herokuapp.com/api/v1\"\r\n\r\nexport const userService = {\r\n    login: async (userName, pass) => {\r\n        const response = await fetch(`${BASE_URL}/auth/signin`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                username: userName,\r\n                password: pass\r\n            })\r\n        });\r\n\r\n        if(response.ok){\r\n            const data = await response.json()\r\n            return data\r\n        }\r\n    },\r\n    verifyToken: async (token) => {\r\n        const response = await fetch(`${BASE_URL}/auth/whoami`,{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        if (response.ok){\r\n            const data = await response.json()\r\n            return data\r\n        }\r\n    }\r\n};","import React, {useState, useEffect, useMemo, useCallback} from 'react';\r\nimport { userService } from '../Services/user.services';\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport const UserProvider = (props) => {\r\n    const [token, setToken] = useState(undefined);\r\n    const [user, setUser] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        const verifyTokenAsync = async () => {\r\n            const lsToken = getToken();\r\n\r\n            if(lsToken) {\r\n                const { username, role } = await userService.verifyToken(lsToken);\r\n                if(username && role) {\r\n                    setUser({ username, role });\r\n                    setTokenAll(lsToken);\r\n                }\r\n            }\r\n        }\r\n\r\n        verifyTokenAsync();\r\n    }, [token])\r\n\r\n    const setTokenAll = (newToken) => {\r\n        if (newToken) {\r\n            localStorage.setItem(\"token\", newToken);\r\n        }\r\n        else {\r\n            localStorage.removeItem(\"token\");\r\n        }\r\n        setToken(newToken);\r\n    };\r\n\r\n    const login = useCallback((username, password)=> {\r\n        const loginAsync = async () => {\r\n            let status = false;\r\n            try {\r\n                const { token: tokenRes } = await userService.login(username, password);\r\n\r\n                if(tokenRes) {\r\n                    setTokenAll(tokenRes);\r\n                    status = true;\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                console.error(\"Error in login\");\r\n            } finally {\r\n                return status;\r\n            }\r\n        };\r\n\r\n        return loginAsync();\r\n    }, [])\r\n\r\n    const logout = useCallback(() => {\r\n        setUser(undefined);\r\n        setTokenAll(undefined);\r\n    }, [])\r\n\r\n    const value = useMemo(()=> ({\r\n        token: token,\r\n        user: user,\r\n        login: login,\r\n        logout: logout,\r\n    }), [token, user, login, logout]);\r\n\r\n    return <UserContext.Provider value={value} {... props}/>;\r\n}\r\n\r\nexport const useUserContext = () => {\r\n    const context = React.useContext(UserContext);\r\n\r\n    if (!context) {\r\n        throw new Error(\"useUserContext() isn't inside of UserProvider\");\r\n    }\r\n\r\n    return context;\r\n}\r\n\r\nconst getToken = () => localStorage.getItem(\"token\");","export default __webpack_public_path__ + \"static/media/Solo_logo.0403dc93.png\";","export default __webpack_public_path__ + \"static/media/Login-Images.6f217f43.png\";","import { useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { useUserContext } from '../../context/userContext';\r\nimport classes from './Login.module.css';\r\nimport solo_logo from '../../assets/images/Solo_logo.png';\r\nimport login_image from '../../assets/images/Login-Images.png';\r\n\r\n\r\nexport default function Login() {\r\n    const { login, token } = useUserContext();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    const onChange = (e, save) => {\r\n        save(e.target.value);\r\n    }\r\n\r\n    const onSubmitHandler = async (e) => {\r\n        e.preventDefault();\r\n        const logged = await login(username, password);\r\n\r\n        setError(!logged);\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n    }\r\n\r\n    if (token) {\r\n        return <Navigate replace to=\"/redirect\" />\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes[\"login-page\"]}>\r\n            <header>\r\n                <img className={classes[\"logo-header\"]} src={solo_logo} alt=\"logo\" />\r\n                <p className={classes[\"title-header\"]}> One Moment </p>\r\n            </header>\r\n            <div className={classes[\"login-container\"]}>\r\n                <div className={classes[\"section-login\"]}>\r\n                    <div className={classes[\"login-images\"]}>\r\n                        <div className={classes[\"img-login-container\"]}>\r\n                            <img className={classes[\"login-img\"]} src={login_image} alt=\"login-img\" />\r\n                            <h2> Inicia sesión y descubre todas las novedades para todos los usuarios</h2>\r\n                        </div>\r\n                    </div>\r\n                    <main className={classes[\"main-container\"]}>\r\n                        <form onSubmit={onSubmitHandler} className={classes[\"form\"]}>\r\n                            <h2 className={classes[\"h2\"]}> One Social Moment </h2>\r\n                            {error && <p className={classes[\"error-login\"]}>\r\n                                Un error ha ocurrido en el inicio de sesión\r\n                            </p>}\r\n\r\n                            <input className={classes[\"login-input\"]}\r\n                                type='text'\r\n                                value={username}\r\n                                placeholder='e.g. username'\r\n                                onChange={(e) => onChange(e, setUsername)}\r\n                            />\r\n\r\n                            <input className={classes[\"login-input\"]}\r\n                                type=\"password\"\r\n                                placeholder=\"e.g password\"\r\n                                onChange={(e) => onChange(e, setPassword)}\r\n                                value={password}\r\n                            />\r\n                            <button className={classes[\"login-button\"]}> <img className={classes[\"logo-header\"]} src={solo_logo} alt=\"logo\" /> Sign In </button>\r\n                        </form>\r\n                        <div className={classes[\"footer-text-login\"]}>\r\n                            <div className={classes[\"text-login-container\"]}>\r\n                                <p className={classes[\"text-login\"]}> ¿No recuerdas tus credenciales? Fueron enviadas a tu correo personal. </p>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useUserContext } from '../../context/userContext';\nimport { Navigate } from 'react-router-dom';\n\nconst rolePages = {\n  \"admin\": \"/admin\",\n  \"user\": \"/user\"\n}\n\nconst RedirectUser = () => {\n  const { user } = useUserContext();\n\n  if (!user) return <p> No se puede redireccionar </p>;\n\n  return <Navigate replace to={rolePages[user.role] ?? \"/\"} />\n}\n\nexport default RedirectUser;","export default __webpack_public_path__ + \"static/media/Error-NotFound.e2cf0f70.png\";","import { Navigate, useNavigate } from 'react-router-dom';\nimport classes from './NotFound.module.css';\nimport error from '../../assets/images/Error-NotFound.png';\n\nconst NotFound = () => {\n    const navigate = useNavigate()\n\n    const onClick = (e) => {\n        navigate('/login')\n    }\n\n    return (\n        <div className={classes[\"container-notfound\"]}>\n            <h2 className={classes[\"title-notfound\"]}>ERROR 404</h2>\n            <div className={classes[\"notfound\"]}>\n                <img className={classes[\"img-notfound\"]} src={error} alt=\"error\" />\n                <div className={classes[\"text-notfound-container\"]}>\n                    <h3 className={classes[\"text-notfound\"]}>Parece que has intentado ingresar a una página que no existe o está en mantenimiento</h3>\n                    <p className={classes[\"subtext-notfound\"]}>Perdona las molestias. Dirígete a la página principal o intenta colocar correctamente la dirección de la página.</p>\n                    <button className={classes[\"button-notfound\"]} onClick={(e) => onClick(e)}>Ir a la página principal</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default NotFound;","const BASE_URL = \"https://posts-pw2021.herokuapp.com/api/v1\"\n\nexport const postService = {\n    createPost: async (token, title, description, image) => {\n        const response = await fetch(`${BASE_URL}/post/create`,{\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                title: title,\n                description: description,\n                image: image\n            })\n        });\n\n        if (response.ok){\n            const data = await response.json()\n            return data\n        }\n    },\n    getOwnedPosts: async (token, limit, page) => {\n        const response = await fetch(`${BASE_URL}/post/owned?limit=${limit}&page=${page}`,{\n            \"method\": \"GET\",\n            \"headers\":{\n                \"Authorization\": `Bearer ${token}`\n            }\n        });\n\n        if(response.ok){\n            const data = await response.json()\n            return data.data\n        }\n    },\n    updatePost: async (token, id, newTitle, newDescription, newImage) => {\n        const response = await fetch(`${BASE_URL}/post/update/${id}`,{\n            method: \"PUT\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                title: newTitle,\n                description: newDescription,\n                image: newImage\n            })\n        });\n\n        if(response.ok){\n            const data = await response.json()\n            return data\n        }\n    },\n    toggleActivePost: async (token, id) => {\n        const response = await fetch(`${BASE_URL}/post/toggle/${id}`,{\n            method: \"PATCH\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`\n            }\n        });\n\n        if(response.ok){\n            const data = await response.json()\n            return data\n        }\n    },\n    getAllPosts: async (token, limit, page) => {\n        const response = await fetch(`${BASE_URL}/post/all?limit=${limit}&page=${page}`,{\n            \"method\": \"GET\",\n            \"headers\":{\n                \"Authorization\": `Bearer ${token}`\n            }\n        });\n\n        if(response.ok){\n            const data = await response.json()\n            return data.data\n        }\n    },\n    getAllFavorite: async (token) => {\n        const postIdArray = await getAllFavoriteId(token)\n        const promisesArray = postIdArray.favorites.map((id) => getPost(token, id))\n        \n        const results = await Promise.all(promisesArray);\n        return results\n    },\n    getOnePost: async (token, id) => {\n        const response = await fetch(`${BASE_URL}/post/one/${id}`,{\n            \"method\": \"GET\",\n            \"headers\":{\n                \"Authorization\": `Bearer ${token}`\n            }\n        });\n\n        if(response.ok){\n            const data = await response.json()\n            return data\n        }\n    },\n    like: async (token, id) => {\n        const response = await fetch(`${BASE_URL}/post/like/${id}`,{\n            \"method\": \"PATCH\",\n            \"headers\":{\n                \"Authorization\": `Bearer ${token}`\n            }\n        });\n\n        if(response.ok){\n            const data = await response.json()\n            return data\n        }\n    },\n    favorite: async (token, id) => {\n        const response = await fetch(`${BASE_URL}/post/fav/${id}`,{\n            \"method\": \"PATCH\",\n            \"headers\":{\n                \"Authorization\": `Bearer ${token}`\n            }\n        });\n\n        if(response.ok){\n            const data = await response.json()\n            return data\n        }\n    },\n    addComment: async (token, id, comment) => {\n        const response = await fetch(`${BASE_URL}/post/comment/${id}`,{\n            \"method\": \"PATCH\",\n            \"headers\":{\n                \"Authorization\": `Bearer ${token}`,\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                description: comment\n            })\n        });\n\n        if(response.ok){\n            const data = await response.json()\n            return data\n        }\n    }\n}\n\nconst getAllFavoriteId = async (token) => {\n    const response = await fetch(`${BASE_URL}/post/fav`,{\n        \"method\": \"GET\",\n        \"headers\":{\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if(response.ok){\n        const data = await response.json()\n        return data\n    }\n}\n\nconst getPost = async (token, id) => {\n    const response = await fetch(`${BASE_URL}/post/one/${id}`,{\n        \"method\": \"GET\",\n        \"headers\":{\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if(response.ok){\n        const data = await response.json()\n        return data\n    }\n}","import React, { useEffect, useState } from 'react'\nimport { postService } from '../Services/posts.Services'\n\nexport default function useInfiniteSrcoll (token, pageNumber, inOwnPostPage){\n        const [loading, setLoading] = useState(true)\n        const [error, setError] = useState(false)\n        const [posts, setPosts] = useState([])\n        const [hasMore, setHasMore] = useState(false)\n    \n        useEffect(() => {\n            const getPost = async () => {\n                setLoading(true)\n                setError(false)\n                \n                try {\n                    if(inOwnPostPage){\n                        const response = await postService.getOwnedPosts(token, 10, pageNumber);\n\n                        setPosts(prevPosts => { return[...prevPosts, ...response] });\n            \n                        setHasMore(response.length > 0)\n                        setLoading(false)\n                    }else{\n                        const response = await postService.getAllPosts(token, 10, pageNumber);\n\n                        setPosts(prevPosts => { return[...prevPosts, ...response] });\n            \n                        setHasMore(response.length > 0)\n                        setLoading(false)\n                    }\n                    \n                } catch (error) {\n                    setError(true)\n                }\n            }\n    \n            getPost();\n        }, [token, pageNumber])\n    \n        return { loading, error, posts, hasMore }\n}","import React, { useEffect, useState } from 'react';\nimport classes from './PostCard.module.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n    RiSlideshow3Fill,\n} from \"react-icons/ri\";\n\nimport {\n    FcLike,\n    FcLikePlaceholder,\n    FcDislike,\n    FcComments,\n    FcBookmark,\n    FcFullTrash,\n    FcEditImage,\n} from 'react-icons/fc';\n\nimport {\n    FaUserTie\n} from 'react-icons/fa';\n\nimport {\n    MdBookmark,\n} from 'react-icons/md';\n\ntoast.configure(\n    {\n        autoClose: 2000,\n    }\n);\n\nconst Card = ({\n    post = [],\n    _id,\n    currentPostId,\n    title,\n    description,\n    image,\n    user,\n    likes = [],\n    comments = [],\n    addLike = () => { },\n    addFav = () => { },\n    toggleStatus = () => { },\n    editPost = () => { },\n    addComment = () => { },\n    typeRole,\n    userName,\n    currentUsername,\n    post_status,\n}) => {\n    const [own, setOwn] = useState(false);\n    const [postcomments, setPostComments] = useState([]);\n    const [showcomments, setShowComments] = useState(false);\n    const [usercomment, setUserComment] = useState('');\n    const [showDelete, setShowDelete] = useState(true);\n    const [showFav, setShowFav] = useState(false);\n\n    const handleToggle = () => {\n        toggleStatus(showDelete);\n        setShowDelete(!showDelete);\n        console.log(showDelete);\n    }\n\n    useEffect(() => {\n        likes.forEach((user) => {\n            if (user.username === currentUsername) {\n                setOwn(true);\n            }\n        });\n\n    }, [likes, currentUsername, toggleStatus, post]);\n\n    useEffect(() => {\n        setPostComments(comments);\n    }, [comments]);\n\n\n    const handleFav = () => {\n        addFav(_id, showFav);\n        setShowFav(!showFav);\n    };\n\n    const handleLike = () => {\n        addLike(own)\n        setOwn(!own)\n    };\n\n    const handleComments = () => {\n        setPostComments(comments);\n        setShowComments(!showcomments);\n    };\n\n\n\n    const handleEditPost = () => {\n        if (_id === currentPostId) {\n            editPost(_id, title, description, image);\n        }\n    }\n\n    const onChange = (e, save) => {\n        save(e.target.value);\n    }\n\n    const onSubmitCommentHandler = async (e) => {\n        e.preventDefault();\n\n        try {\n            if (usercomment.length > 8) {\n                const addedComment = addComment(usercomment);\n\n                if (addedComment) {\n                    setUserComment('');\n                }\n            } else {\n                toast.error('El Comentario debe contener como minimo 8 caracteres');\n            }\n        } catch (error) {\n            toast.error(\"error\");\n        }\n    }\n\n    const CustomToastLike = () => {\n        if (own) {\n            return (\n                <div className={classes[\"toast-notification-container\"]}>\n                    <div className={classes[\"toast-icon-notification-container\"]}>\n                        <FcDislike className=\"text-2xl m-auto \" />\n                    </div>\n                    <div className={classes[\"toast-notification-text-container\"]}>\n                        <p> Like quitado al post de {user.username} </p>\n                    </div>\n                </div>\n\n            )\n        } else {\n            return (\n                <div className={classes[\"toast-notification-container\"]}>\n                    <div className={classes[\"toast-icon-notification-container\"]}>\n                        <FcLike className=\"text-2xl m-auto\" />\n                    </div>\n                    <div className={classes[\"toast-notification-text-container\"]}>\n                        <p> Like al post de {user.username} </p>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    const giveaLike = () => toast(<CustomToastLike />, { position: toast.POSITION.BOTTOM_CENTER });\n    const removeaLike = () => toast(<CustomToastLike />, { position: toast.POSITION.BOTTOM_CENTER });\n\n    return (\n        <div className={classes[\"posts-container-general\"]} >\n            <div className={classes[\"username-post-container\"]}>\n                <FaUserTie className=\"user-icon mr-2 iphone:text-5xl ipad:text-6xl PC:text-7xl text-blue-400 border-2 rounded-full border-blue-500 shadow-md\" />\n                <h3>{user.username}</h3>\n            </div>\n            <div className={classes[\"title-post-container\"]}>\n                <h1>{title}</h1>\n            </div>\n            <div className={classes[\"img-post-container\"]}>\n                <img src={image} alt={title} />\n            </div>\n            <div className={classes[\"description-post-container\"]}>\n                <p>{description}</p>\n            </div>\n            <div className=\"flex flex-col\">\n                <div className=\"flex justify-end px-4 pb-4\">\n                    {(typeRole === 'admin' && currentUsername === user.username) ? (\n                        <>\n                            <div className={`${showcomments ? \"hidden\" : \"show\"}`}>\n                                <div className={classes[\"fav-container\"]}>\n                                    <button onClick={() => { handleEditPost(); }}>\n                                        <FcEditImage className=\"card-icons edit-icon mx-2 iphone:text-2xl  laptop:text-3xl\" />\n                                    </button>\n                                </div>\n                            </div>\n                            <div className={`${showcomments ? \"hidden\" : \"show\"}`}>\n                                <div className={classes[\"fav-container\"]}>\n                                    <button onClick={() => { handleToggle(); }}>\n                                        {showDelete ? (\n                                            <FcFullTrash className={`card-icons delete-icon mx-2 iphone:text-2xl  laptop:text-3xl`} />\n                                        ) : (\n                                            <RiSlideshow3Fill className={`card-icons delete-icon mx-2 iphone:text-2xl  laptop:text-3xl`} />\n                                        )}\n                                    </button>\n                                </div>\n                            </div>\n                        </>\n                    ) : ('')}\n                    <>\n                        <div className={classes[\"footer-post-container\"]}>\n                            <div className={classes[\"likes-container\"]}>\n                                {likes.length > 0 ? (\n                                    <p className={classes[\"lenght-container\"]}>{likes.length}</p>\n                                ) : (\n                                    <p className={classes[\"lenght-container\"]}>0</p>\n                                )}\n                                <button\n                                    onClick={() => {\n                                        handleLike();\n                                        if (own) {\n                                            removeaLike();\n                                        }\n                                        else {\n                                            giveaLike();\n                                        }\n                                    }}\n                                >\n                                    {own ? (\n                                        <FcLike\n                                            className={`card-icons like-icon mx-2 iphone:text-2xl laptop:text-3xl  m-auto`}\n                                        />\n                                    ) : (\n                                        <FcLikePlaceholder\n                                            className={`card-icons like-icon mx-2 iphone:text-2xl laptop:text-3xl m-auto`}\n                                        />\n                                    )}\n                                </button>\n                            </div>\n                            <div className={classes[\"comments-container\"]}>\n                                {comments.length > 0 ? (<p className={classes[\"lenght-container\"]}>{comments.length}</p>) : (<p className={classes[\"lenght-container\"]}>0</p>)}\n                                <button onClick={handleComments}>\n                                    <FcComments className=\"card-icons comment-icon mx-2 iphone:text-2xl  laptop:text-3xl  m-auto\" />\n                                </button>\n                            </div>\n                            <div className={`${showcomments ? \"hidden\" : \"show\"}`}>\n                                <div className={classes[\"fav-container\"]}>\n                                    <button onClick={() => { handleFav(); }}>\n                                        {showFav ? (\n                                            <MdBookmark className=\"card-icons addcomment-icon mx-2 iphone:text-2xl  laptop:text-3xl m-auto text-red-600\" />\n                                        ) : (\n                                            <MdBookmark className=\"card-icons addcomment-icon mx-2 iphone:text-2xl  laptop:text-3xl m-auto text-red-200\" />\n                                        )}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                </div>    \n                <div className={`${showcomments ? \"show\" : \"hidden\"}`}>\n                    <p className={classes[\"title-add-comment\"]}>Agrega un comentario:</p>\n                    <form onSubmit={onSubmitCommentHandler} className={classes[\"form-add-comment\"]}>\n                        <input\n                            type=\"text\"\n                            className={classes[\"input-add-comment\"]}\n                            value={usercomment}\n                            onChange={(e) => onChange(e, setUserComment)} />\n                        <button type=\"submit\" className={classes[\"button-add-comment\"]}>Publicar comentario</button>\n                    </form>\n                    {postcomments.map((comment) => (\n                        <div className={classes[\"post-comment\"]}>\n                            <h1> {comment.user.username} </h1>\n                            <p>{comment.description}</p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;","import React, { useState, useRef, useCallback, useEffect } from 'react'\nimport { useUserContext } from '../../context/userContext'\nimport { postService } from '../../Services/posts.Services'\nimport { useNavigate } from 'react-router-dom'\nimport useInfiniteScroll from '../../Hooks/useInfiniteScroll'\nimport solo_logo from '../../assets/images/Solo_logo.png';\nimport Card from '../../Components/PostCard/PostCard'\nimport classes from './Admin.module.css'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n    VscDebugDisconnect,\n} from \"react-icons/vsc\";\nimport {\n    AiFillHome,\n} from \"react-icons/ai\";\nimport {\n    BsFileEarmarkPost,\n} from \"react-icons/bs\";\nimport {\n    IoLogOutSharp,\n} from \"react-icons/io5\";\nimport {\n    FaBookmark,\n} from \"react-icons/fa\";\n\nimport {\n    FcAddRow,\n    FcLock,\n    FcUnlock,\n    FcCancel,\n    FcRating,\n    FcApproval,\n} from \"react-icons/fc\";\n\n\nexport default function Admin() {\n    const navigate = useNavigate()\n    const { logout } = useUserContext()\n\n    const logoutHandler = () => {\n\n        if(localStorage.getItem('username') !== null){\n            localStorage.removeItem('username')\n        }\n\n        logout()\n        navigate(\"/login\")\n    }\n\n    const viewFavHandler = () => {\n        localStorage.setItem('username', user.username)\n        navigate(\"/favorites\")\n    }\n\n    const viewOwnPostsHandler = () => {\n        localStorage.setItem('username', user.username)\n        navigate(\"/ownposts\")\n    }\n\n\n    const { token, user } = useUserContext();\n\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n\n    const onChange = (e, save) => {\n        save(e.target.value);\n    }\n\n    const onSubmitHandler = async (e) => {\n        e.preventDefault();\n\n        try {\n            if ((title.length >= 8 && title.length <= 32) && (description.length >= 8) && (image !== '')) {\n                const posted = await postService.createPost(token, title, description, image);\n                if (posted) {\n                    setTitle('');\n                    setDescription('');\n                    setImage('');\n                    createPost();\n                }\n            } else if (title === '' && description === '' && image === '') {\n                toast.error(\"No se han ingresado datos\");\n            } else if (title.length < 8 || title.length > 32) {\n                toast.error('Titulo debe tener entre 8 y 32 caracteres')\n            } else if (description.length < 8) {\n                toast.error('La descripción debe tener al menos 8 caracteres')\n            } else if (image === '') {\n                toast.error('La imagen debe ser un url')\n            }\n        } catch (error) {\n            console.error(\"error\");\n        }\n    }\n\n\n    const [page, setPage] = useState(0)\n    const [post, setPost] = useState([])\n    const { posts, hasMore, loading, error } = useInfiniteScroll(token, page, false)\n    const observer = useRef()\n\n\n\n    const lastPostRef = useCallback(node => {\n        if (loading) return\n\n        if (observer.current) observer.current.disconnect()\n\n        observer.current = new IntersectionObserver(entries => {\n            if (entries[0].isIntersecting && hasMore) {\n                setPage(prevPage => prevPage + 1)\n            }\n\n        })\n        if (node) observer.current.observe(node)\n    }, [loading, hasMore])\n\n    const addLikeHandler = async (id, Own) => {\n\n\n        let like = await postService.like(token, id)\n\n\n        console.log(like.message);\n\n        if (like.message === \"Post updated\") {\n\n            let newPost = posts.map(p => {\n                if (p._id === id) {\n                    if (Own) {\n                        p.likes.splice(p.likes.indexOf(user.username), 1)\n                    }\n                    else {\n                        p.likes.push({ username: user.username })\n                    }\n                }\n                return p;\n            })\n            setPost(newPost);\n        }\n    }\n\n    const addFavHandler = async (id) => {\n        let fav = await postService.favorite(token, id)\n\n        if (fav === \"Post updated\") {\n            let newPost = posts.map(p => {\n                if (p._id === id) {\n                    if (p.favorites.includes(user.username)) {\n                        p.favorites.splice(p.favorites.indexOf(user.username), 1)\n                        disFavPost();\n                    }\n                    else {\n                        p.favorites.push(user.username)\n                        favPost();\n                    }\n                    return p;\n                }\n                setPost(newPost);\n            })\n        }\n\n    };\n\n    const toggleStatusHandler = async (id, showDelete) => {\n        let toggle = await postService.toggleActivePost(token, id);\n\n        if (toggle.message === \"Post updated\") {\n            let newPost = posts.map(p => {\n                if (p._id === id) {\n                    if (showDelete) {\n                        p.active = false;\n                        showDelete = true;\n                        togglePost();\n                    }\n                    else {\n                        p.active = true;\n                        showDelete = false;\n                        showPost();\n                    }\n                }\n                return p;\n            })\n            setPost(newPost)\n        }\n    };\n    const CustomToastShow = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcUnlock className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Tu post es público nuevamente </p>\n                </div>\n            </div>\n\n        )\n    }\n\n    const editPostHandler = (id, oldTitle, oldDescription, oldImage) => {\n\n        localStorage.setItem(\"idPost\", id)\n        localStorage.setItem(\"titlePost\", oldTitle)\n        localStorage.setItem(\"descriptionPost\", oldDescription)\n        localStorage.setItem(\"imagePost\", oldImage)\n\n        if(localStorage.getItem('username') !== null){\n            localStorage.removeItem('username')\n        }\n\n        navigate(\"/editpost\")\n    }\n\n    const addCommentHandler = async (id, comment) => {\n        let comments = await postService.addComment(token, id, comment);\n\n        if (comments.message === \"Post updated\") {\n            commentPost();\n        }\n    }\n\n    toast.configure(\n        {\n            autoClose: 2000,\n        }\n    );\n\n    const CustomToastPost = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcAddRow className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Tu post se ha publicado </p>\n                </div>\n            </div>\n\n        )\n    }\n\n    const CustomToastLogOut = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <VscDebugDisconnect className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Has cerrado la sesión</p>\n                </div>\n            </div>\n\n        )\n    }\n\n    const CustomToastToggle = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcLock className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Tu post se ha ocultado </p>\n                </div>\n            </div>\n\n        )\n    }\n    const CustomToastFav = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcRating className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Se ha agregado a favoritos </p>\n                </div>\n            </div>\n\n        )\n    }\n\n    const CustomToastDisFav = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcCancel className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Se ha eliminado de favoritos </p>\n                </div>\n            </div>\n\n        )\n    }\n    const CustomToastComment = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcApproval className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Se ha publicado tu comentario </p>\n                </div>\n            </div>\n\n        )\n    }\n    const togglePost = () => toast(<CustomToastToggle />, { position: toast.POSITION.BOTTOM_CENTER });\n    const favPost = () => toast(<CustomToastFav />, { position: toast.POSITION.BOTTOM_CENTER });\n    const disFavPost = () => toast(<CustomToastDisFav />, { position: toast.POSITION.BOTTOM_CENTER });\n    const createPost = () => toast(<CustomToastPost />, { position: toast.POSITION.BOTTOM_CENTER });\n    const logoutUser = () => toast(<CustomToastLogOut />, { position: toast.POSITION.BOTTOM_CENTER });\n    const showPost = () => toast(<CustomToastShow />, { position: toast.POSITION.BOTTOM_CENTER });\n    const commentPost = () => toast(<CustomToastComment />, { position: toast.POSITION.BOTTOM_CENTER });\n    return (\n        <section className={classes[\"section-container\"]}>\n            <header className={classes[\"header-admin\"]}>\n                <div className={classes[\"header-admin__logo\"]}>\n                    <img className={classes[\"logo-header\"]} src={solo_logo} alt=\"logo\" />\n                    <p className={classes[\"title-header\"]}> One Moment </p>\n                </div>\n                <div className={classes[\"logout-container\"]}>\n                    <h1 className={classes[\"user-title\"]}>Admin: {user.username}</h1>\n                    <button onClick={() => {\n                        window.location.reload();\n                    }} >\n                        <AiFillHome className=\"admin-icons home-icon mx-2 iphone:text-xl ipad:text-2xl laptop:text-5xl m-auto text-blue-500\" />\n                    </button>\n                    <button onClick={viewFavHandler}>\n                        <FaBookmark className=\"admin-icons home-icon mx-2 iphone:text-xl ipad:text-2xl laptop:text-5xl m-auto text-blue-500\" />\n                    </button>\n                    <button onClick={viewOwnPostsHandler}>\n                        <BsFileEarmarkPost className=\"admin-icons home-icon mx-2 iphone:text-xl ipad:text-2xl laptop:text-5xl m-auto text-blue-500\" />\n                    </button>\n                    <button onClick={() => { logoutHandler(); logoutUser(); }}>\n                        <IoLogOutSharp className=\"admin-icons home-icon mx-2 iphone:text-xl ipad:text-2xl laptop:text-5xl m-auto text-red-500\" /></button>\n                </div>\n            </header>\n\n            <div className={classes[\"admin-container\"]}>\n                <section classes={classes[\"post-container\"]}>\n                    <form onSubmit={onSubmitHandler}\n                        className={classes[\"form-createPost\"]}>\n                        <h2 className={classes[\"createPost-title\"]}>Nuevo post</h2>\n                        <div className={classes[\"input-container\"]}>\n                            <label className={classes[\"title-section\"]}>Título:</label>\n                            <input className={classes[\"title-input\"]}\n                                type='text'\n                                value={title}\n                                placeholder='e.g. post title'\n                                onChange={(e) => onChange(e, setTitle)}\n                            />\n                        </div>\n                        <div className={classes[\"input-container\"]}>\n                            <label className={classes[\"title-section\"]}>Descrición:</label>\n                            <input className={classes[\"description-input\"]}\n                                type=\"text\"\n                                placeholder=\"e.g post description\"\n                                onChange={(e) => onChange(e, setDescription)}\n                                value={description}\n                            />\n                        </div>\n                        <div className={classes[\"input-container\"]}>\n                            <label className={classes[\"title-section\"]}>Imagen (URL):</label>\n                            <input className={classes[\"title-input\"]}\n                                type=\"url\"\n                                placeholder=\"e.g https://Something.image.png\"\n                                onChange={(e) => onChange(e, setImage)}\n                                value={image}\n                            />\n                        </div>\n                        <div className={classes[\"container-createPost_button\"]}>\n                            <button className={classes[\"button-createPost\"]}> PUBLICAR </button>\n                        </div>\n                    </form>\n\n                </section>\n                <section>\n                    {posts.map((post, index) => {\n                        if (posts.length === index + 1) {\n                            return (\n                                <div ref={lastPostRef}\n                                    key={post._id}\n                                >{post.title}</div>\n                            )\n                        } else {\n                            return (\n                                <Card\n                                    key={post._id}\n                                    {...post}\n                                    currentPostId={post._id}\n                                    token={token}\n                                    addLike={(own) => addLikeHandler(post._id, own)}\n                                    addFav={() => addFavHandler(post._id)}\n                                    toggleStatus={() => toggleStatusHandler(post._id, post.status)}\n                                    editPost={() => editPostHandler(post._id, post.title, post.description, post.image)}\n                                    addComment={(comment) => addCommentHandler(post._id, comment)}\n                                    typeRole={user.role}\n                                    userName={user.name}\n                                    currentUsername={user.username}\n                                    likes={post.likes}\n\n                                />\n                            )\n                        }\n                    })}\n                    <div>{loading && 'Loading...'}</div>\n                    <div>{error && 'Error'}</div>\n                </section>\n            </div>\n        </section>\n    )\n}","import React, { useState, useRef, useCallback } from 'react';\nimport { useUserContext } from '../../context/userContext'\nimport { postService } from '../../Services/posts.Services'\nimport { useNavigate } from 'react-router-dom'\nimport useInfiniteScroll from '../../Hooks/useInfiniteScroll'\nimport classes from './User.module.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport solo_logo from '../../assets/images/Solo_logo.png';\nimport {\n    FcRating,\n    FcCancel,\n    FcApproval,\n} from \"react-icons/fc\";\nimport {\n    VscDebugDisconnect,\n} from \"react-icons/vsc\";\nimport {\n    AiFillHome,\n} from \"react-icons/ai\";\nimport {\n    IoLogOutSharp,\n} from \"react-icons/io5\";\nimport {\n    FaBookmark,\n} from \"react-icons/fa\";\nimport Card from '../../Components/PostCard/PostCard'\n\nexport default function User() {\n    const navigate = useNavigate()\n    const { logout } = useUserContext()\n    toast.configure(\n        {\n            autoClose: 2000,\n        }\n    );\n    const CustomToastLogOut = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <VscDebugDisconnect className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Has cerrado la sesión</p>\n                </div>\n            </div>\n\n        )\n    }\n    const CustomToastFav = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcRating className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Se ha agregado a favoritos </p>\n                </div>\n            </div>\n\n        )\n    }\n\n    const CustomToastDisFav = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcCancel className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Se ha eliminado de favoritos </p>\n                </div>\n            </div>\n\n        )\n    }\n    const favPost = () => toast(<CustomToastFav />, { position: toast.POSITION.BOTTOM_CENTER });\n    const disFavPost = () => toast(<CustomToastDisFav />, { position: toast.POSITION.BOTTOM_CENTER });\n    const logoutUser = () => toast(<CustomToastLogOut />, { position: toast.POSITION.BOTTOM_CENTER });\n\n    const logoutHandler = () => {\n        logout()\n        navigate(\"/login\")\n    }\n\n    const viewFavHandler = () => {\n        localStorage.setItem('username', user.username)\n        navigate(\"/favorites\")\n    }\n\n    const { token, user } = useUserContext()\n    const [page, setPage] = useState(0);\n    const [post, setPost] = useState([])\n    const { posts, hasMore, loading, error } = useInfiniteScroll(token, page, false)\n    const observer = useRef()\n\n    const lastPostRef = useCallback(node => {\n        if (loading) return\n\n        if (observer.current) observer.current.disconnect()\n\n        observer.current = new IntersectionObserver(entries => {\n            if (entries[0].isIntersecting && hasMore) {\n                setPage(prevPage => prevPage + 1)\n            }\n        })\n        if (node) observer.current.observe(node)\n    }, [loading, hasMore])\n\n    const addLikeHandler = async (id, Own) => {\n\n        let { message: messageRes } = await postService.like(token, id)\n\n        console.log(messageRes);\n\n        if (messageRes === \"Post updated\") {\n\n            let newPost = posts.map(p => {\n                if (p._id === id) {\n                    if (Own) {\n                        p.likes.splice(p.likes.indexOf(user.username), 1)\n                    }\n                    else {\n                        p.likes.push({ username: user.username })\n                    }\n                }\n                return p;\n            })\n            setPost(newPost);\n        }\n        let msg = Own ? 'Has removido tu like' : 'Has dado like';\n\n        console.log(msg);\n    }\n\n    const addFavHandler = async (id) => {\n        let fav = await postService.favorite(token, id)\n\n        if (fav === \"Post updated\") {\n            let newPost = posts.forEach(p => {\n                if (p._id === id) {\n                    if (p.favorites.includes(user.username)) {\n                        p.favorites.splice(p.favorites.indexOf(user.username), 1)\n                        disFavPost();\n                    }\n                    else {\n                        p.favorites.push(user.username)\n                        favPost();\n                    }\n                    return p;\n                }\n                setPost(newPost);\n            })\n        }\n\n    };\n    const addCommentHandler = async (id, comment) => {\n        let comments = await postService.addComment(token, id, comment);\n\n        if (comments.message === \"Post updated\") {\n            commentPost();\n        }\n    }\n\n    const CustomToastComment = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcApproval className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Se ha publicado tu comentario </p>\n                </div>\n            </div>\n\n        )\n    }\n\n    const commentPost = () => toast(<CustomToastComment />, { position: toast.POSITION.BOTTOM_CENTER });\n\n    return (\n        <section className={classes[\"section-container\"]}>\n            <header className={classes[\"header-user\"]}>\n                <div className={classes[\"header-user__logo\"]}>\n                    <img className={classes[\"logo-header\"]} src={solo_logo} alt=\"logo\" />\n                    <p className={classes[\"title-header\"]}> One Moment </p>\n                </div>\n                <div className={classes[\"logout-container\"]}>\n                    <h1 className={classes[\"user-title\"]}>Admin: {user.username}</h1>\n                    <button onClick={() => {\n                        window.location.reload();\n                    }} >\n                        <AiFillHome className=\"admin-icons home-icon mx-2 iphone:text-xl ipad:text-2xl laptop:text-5xl m-auto text-blue-500\" />\n                    </button>\n                    <button onClick={viewFavHandler}>\n                        <FaBookmark className=\"admin-icons home-icon mx-2 iphone:text-xl ipad:text-2xl laptop:text-5xl m-auto text-blue-500\" />\n                    </button>\n                    <button onClick={() => { logoutHandler(); logoutUser(); }}>\n                        <IoLogOutSharp className=\"admin-icons home-icon mx-2 iphone:text-xl ipad:text-2xl laptop:text-5xl m-auto text-red-500\" /></button>\n                </div>\n            </header>\n            <div className={classes[\"user-container\"]}>\n                <div >\n                    {posts.map((post, index) => {\n                        if (posts.length === index + 1) {\n                            return (\n                                <div ref={lastPostRef}\n                                    key={post._id}\n                                >{post.title}</div>\n                            )\n                        } else {\n                            return (\n                                <Card\n                                    key={post._id}\n                                    {...post}\n                                    token={token}\n                                    addLike={(own) => addLikeHandler(post._id, own)}\n                                    addFav={() => addFavHandler(post._id)}\n                                    addComment={(comment) => addCommentHandler(post._id, comment)}\n                                    typeRole={user.role}\n                                    userName={user.username}\n                                    currentUsername={user.username}\n                                />\n                            )\n                        }\n                    })}\n                    <div>{loading && 'Loading...'}</div>\n                    <div>{error && 'Error'}</div>\n                </div>\n            </div>\n        </section>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useUserContext } from '../../context/userContext'\nimport { postService } from '../../Services/posts.Services';\nimport classes from './UpdatePost.module.css';\nimport solo_logo from '../../assets/images/Solo_logo.png';\nimport {\n    FcAddRow,\n} from \"react-icons/fc\";\nimport {\n    IoLogOutSharp,\n} from \"react-icons/io5\";\n\nimport {\n    RiArrowGoBackFill,\n} from \"react-icons/ri\";\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function UpdatePopUp() {\n    const navigate = useNavigate();\n    const { token } = useUserContext();\n    const [id, setId] = useState('')\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n\n    toast.configure(\n        {\n            autoClose: 3000,\n        }\n    );\n    useEffect(() => {\n        setId(localStorage.getItem(\"idPost\"))\n        setTitle(localStorage.getItem(\"titlePost\"));\n        setDescription(localStorage.getItem(\"descriptionPost\"));\n        setImage(localStorage.getItem(\"imagePost\"));\n    }, [])\n\n    const onChange = (e, save) => {\n        save(e.target.value);\n    }\n\n    const CustomToastPost = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcAddRow className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Tu post se ha actualizado </p>\n                </div>\n            </div>\n\n        )\n    }\n\n\n\n\n    const updatePost = () => toast(<CustomToastPost />, { position: toast.POSITION.BOTTOM_CENTER });\n\n\n    const onSubmitHandler = async (e) => {\n        e.preventDefault();\n\n        try {\n            const updated = postService.updatePost(token, id, title, description, image);\n\n            if (updated) {\n                setTitle('');\n                setDescription('');\n                setImage('');\n\n                localStorage.removeItem(\"idPost\")\n                localStorage.removeItem(\"titlePost\")\n                localStorage.removeItem(\"descriptionPost\")\n                localStorage.removeItem(\"imagePost\")\n                updatePost();\n                navigate(\"/admin\")\n            }\n        } catch (error) {\n            console.error(\"error\");\n        }\n    }\n\n\n    const goBackHandler = () => {\n        localStorage.removeItem(\"idPost\")\n        localStorage.removeItem(\"titlePost\")\n        localStorage.removeItem(\"descriptionPost\")\n        localStorage.removeItem(\"imagePost\")\n\n        navigate(\"/admin\")\n    }\n\n    return (\n        <div className={classes[\"update-post\"]}>\n            <header className={classes[\"header-update\"]}>\n                <div className={classes[\"header-update__logo\"]}>\n                    <img className={classes[\"logo-header\"]} src={solo_logo} alt=\"logo\" />\n                    <p className={classes[\"title-header\"]}> One Moment </p>\n                </div>\n                <div className={classes[\"logout-container\"]}>\n                    <h1 className={classes[\"user-title\"]}>Regresar</h1>\n                    <button onClick={goBackHandler}>\n                        <RiArrowGoBackFill className=\"admin-icons home-icon mx-2 iphone:text-xl ipad:text-2xl laptop:text-5xl m-auto text-blue-500\" />\n                    </button>\n                </div>\n            </header>\n            <section className={classes[\"update\"]}>\n                <div className={classes[\"update-container\"]}>\n                    <div className={classes[\"update-title\"]}>\n                        <h2>Update Post</h2>\n                    </div>\n                    <section classes={classes[\"post-container\"]}>\n                        <form onSubmit={onSubmitHandler}\n                            className={classes[\"form-createPost\"]}>\n                            <h2 className={classes[\"createPost-title\"]}>Nuevo post</h2>\n                            <div className={classes[\"input-container\"]}>\n                                <label className={classes[\"title-section\"]}>Título:</label>\n                                <input className={classes[\"title-input\"]}\n                                    type='text'\n                                    value={title}\n                                    placeholder='e.g. post title'\n                                    onChange={(e) => onChange(e, setTitle)}\n                                />\n                            </div>\n                            <div className={classes[\"input-container\"]}>\n                                <label className={classes[\"title-section\"]}>Descrición:</label>\n                                <input className={classes[\"description-input\"]}\n                                    type=\"text\"\n                                    placeholder=\"e.g post description\"\n                                    onChange={(e) => onChange(e, setDescription)}\n                                    value={description}\n                                />\n                            </div>\n                            <div className={classes[\"input-container\"]}>\n                                <label className={classes[\"title-section\"]}>Imagen (URL):</label>\n                                <input className={classes[\"title-input\"]}\n                                    type=\"url\"\n                                    placeholder=\"e.g https://Something.image.png\"\n                                    onChange={(e) => onChange(e, setImage)}\n                                    value={image}\n                                />\n                            </div>\n                            <div className={classes[\"container-createPost_button\"]}>\n                                <button className={classes[\"button-createPost\"]}> PUBLICAR </button>\n                            </div>\n                            <button className={classes[\"button-cancel-createPost\"]} onClick={() => goBackHandler()}>Cancelar</button>\n                        </form>\n                    </section>\n                </div>\n            </section>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { useUserContext } from '../../context/userContext'\nimport { postService } from '../../Services/posts.Services'\nimport { useNavigate } from 'react-router-dom'\nimport solo_logo from '../../assets/images/Solo_logo.png';\nimport Card from '../../Components/PostCard/PostCard'\nimport classes from './Favorites.module.css'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n    VscDebugDisconnect,\n} from \"react-icons/vsc\";\nimport {\n    BsFileEarmarkPost,\n} from \"react-icons/bs\";\nimport {\n    FcAddRow,\n    FcLock,\n    FcUnlock,\n    FcCancel,\n    FcRating,\n    FcApproval,\n} from \"react-icons/fc\";\n\nimport {\n    IoLogOutSharp,\n} from \"react-icons/io5\";\n\nimport {\n    RiArrowGoBackFill,\n} from \"react-icons/ri\";\n\nexport default function Favorites() {\n    toast.configure(\n        {\n            autoClose: 2000,\n        }\n    );\n    const navigate = useNavigate()\n    const { token, user, logout } = useUserContext()\n    const [posts, setPosts] = useState([])\n\n\n\n    useEffect(() => {\n        const getFavs = async () => {\n            const favs = await postService.getAllFavorite(token)\n\n            const filteredFavs = favs.filter(fav => fav !== undefined)\n\n            setPosts(filteredFavs)\n        }\n\n        getFavs();\n    }, [])\n\n    const logoutHandler = () => {\n        logout()\n        localStorage.removeItem('username')\n        navigate(\"/login\")\n    }\n\n    const goBackHandler = () => {\n        if (user.role === \"admin\") {\n            localStorage.removeItem(\"username\")\n            navigate(\"/admin\")\n        } else if (user.role === \"user\") {\n            localStorage.removeItem(\"username\")\n            navigate(\"/user\")\n        }\n    }\n\n\n    const addLikeHandler = async (id, Own) => {\n\n        let like = await postService.like(token, id)\n\n        console.log(like.message);\n\n        if (like.message === \"Post updated\") {\n\n            let newPost = posts.map(p => {\n                if (p._id === id) {\n                    if (Own) {\n                        p.likes.splice(p.likes.indexOf(user.username), 1)\n                    }\n                    else {\n                        p.likes.push({ username: user.username })\n                    }\n                }\n                return p;\n            })\n            setPosts(newPost);\n        }\n    }\n\n    const addFavHandler = async (id) => {\n        let fav = await postService.favorite(token, id)\n\n        if (fav === \"Post updated\") {\n            let newPost = posts.map(p => {\n                if (p._id === id) {\n                    if (p.favorites.includes(user.username)) {\n                        p.favorites.splice(p.favorites.indexOf(user.username), 1)\n                        disFavPost();\n                    }\n                    else {\n                        p.favorites.push(user.username)\n                        favPost();\n                    }\n                    return p;\n                }\n                setPosts(newPost);\n            })\n        }\n\n    };\n    const addCommentHandler = async (id, comment) => {\n        let comments = await postService.addComment(token, id, comment);\n\n        if (comments.message === \"Post updated\") {\n            commentPost();\n        }\n    }\n\n    const viewOwnPostsHandler = () => {\n        localStorage.removeItem(\"username\")\n        navigate(\"/ownposts\")\n    }\n\n    const CustomToastPost = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcAddRow className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Tu post se ha publicado </p>\n                </div>\n            </div>\n\n        )\n    }\n\n    const CustomToastLogOut = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <VscDebugDisconnect className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Has cerrado la sesión</p>\n                </div>\n            </div>\n\n        )\n    }\n\n\n    const CustomToastFav = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcRating className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Se ha agregado a favoritos </p>\n                </div>\n            </div>\n\n        )\n    }\n\n    const CustomToastDisFav = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcCancel className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Se ha eliminado de favoritos </p>\n                </div>\n            </div>\n\n        )\n    }\n    const CustomToastComment = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcApproval className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Se ha publicado tu comentario </p>\n                </div>\n            </div>\n\n        )\n    }\n\n    const favPost = () => toast(<CustomToastFav />, { position: toast.POSITION.BOTTOM_CENTER });\n    const disFavPost = () => toast(<CustomToastDisFav />, { position: toast.POSITION.BOTTOM_CENTER });\n    const logoutUser = () => toast(<CustomToastLogOut />, { position: toast.POSITION.BOTTOM_CENTER });\n    const commentPost = () => toast(<CustomToastComment />, { position: toast.POSITION.BOTTOM_CENTER });\n    return (\n        <div className={classes[\"favorites\"]}>\n            <header className={classes[\"header-favorites\"]}>\n                <div className={classes[\"header-favorites__logo\"]}>\n                    <img className={classes[\"logo-header\"]} src={solo_logo} alt=\"logo\" />\n                    <p className={classes[\"title-header\"]}> One Moment </p>\n                </div>\n                <div className={classes[\"logout-container\"]}>\n                    <h1 className={classes[\"user-title\"]}>Post favoritos de: {localStorage.getItem(\"username\")}</h1>\n                    <button className={`${(user.role === \"user\") ? \"hidden\" : \"show\"}`} onClick={viewOwnPostsHandler}>\n                        <BsFileEarmarkPost className=\"admin-icons home-icon mx-2 iphone:text-xl ipad:text-2xl laptop:text-5xl m-auto text-blue-500\" />\n                    </button>\n                    <button onClick={goBackHandler}>\n                        <RiArrowGoBackFill className=\"admin-icons home-icon mx-2 iphone:text-xl ipad:text-2xl laptop:text-5xl m-auto text-blue-500\" />\n                    </button>\n                    <button onClick={() => { logoutHandler(); logoutUser(); }}>\n                        <IoLogOutSharp className=\"admin-icons home-icon mx-2 iphone:text-xl ipad:text-2xl laptop:text-5xl m-auto text-red-500\" /></button>\n                </div>\n            </header>\n            <div className={classes[\"favorites-container\"]}>\n                {posts.map(post => {\n                    return (\n                        <Card\n                            post={post}\n                            key={post._id}\n                            {...post}\n                            currentPostId={post._id}\n                            token={token}\n                            addLike={(own) => addLikeHandler(post._id, own)}\n                            addFav={() => addFavHandler(post._id)}\n                            addComment={(comment) => addCommentHandler(post._id, comment)}\n                            typeRole={user.role}\n                            userName={user.username}\n                            currentUsername={user.username}\n                            likes={post.likes}\n                        />\n                    )\n                })}\n            </div>\n        </div>\n    )\n}","import React, { useState, useRef, useCallback } from 'react'\nimport { useUserContext } from '../../context/userContext'\nimport { postService } from '../../Services/posts.Services'\nimport { useNavigate } from 'react-router-dom'\nimport useInfiniteSrcoll from '../../Hooks/useInfiniteScroll'\nimport solo_logo from '../../assets/images/Solo_logo.png';\nimport classes from './OwnPosts.module.css'\nimport Card from '../../Components/PostCard/PostCard'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n    VscDebugDisconnect,\n} from \"react-icons/vsc\";\nimport {\n    FaBookmark,\n} from \"react-icons/fa\";\nimport {\n    IoLogOutSharp,\n} from \"react-icons/io5\";\n\nimport {\n    RiArrowGoBackFill,\n} from \"react-icons/ri\";\n\nimport {\n    FcAddRow,\n    FcLock,\n    FcUnlock,\n    FcCancel,\n    FcRating,\n    FcApproval,\n} from \"react-icons/fc\";\n\nexport default function Admin() {\n    toast.configure(\n        {\n            autoClose: 2000,\n        }\n    );\n    const navigate = useNavigate()\n    const { logout } = useUserContext()\n\n    const logoutHandler = () => {\n        logout()\n\n        if(localStorage.getItem('username') !== null){\n            localStorage.removeItem('username')\n        }\n\n        navigate(\"/login\")\n    }\n\n    const viewFavHandler = () => {\n        localStorage.setItem('username', user.username)\n        navigate(\"/favorites\")\n    }\n\n    const goBackHandler = () => {\n        if(localStorage.getItem('username') !== null){\n            localStorage.removeItem('username')\n        }\n        navigate(\"/admin\")\n    }\n\n    const { token, user } = useUserContext();\n\n    const [page, setPage] = useState(0)\n    const [post, setPost] = useState([])\n    const { posts, hasMore, loading, error } = useInfiniteSrcoll(token, page, true)\n    const observer = useRef()\n\n    const lastPostRef = useCallback(node => {\n        if (loading) return\n\n        if (observer.current) observer.current.disconnect()\n\n        observer.current = new IntersectionObserver(entries => {\n            if (entries[0].isIntersecting && hasMore) {\n                setPage(prevPage => prevPage + 1)\n            }\n        })\n        if (node) observer.current.observe(node)\n    }, [loading, hasMore])\n\n\n    const addLikeHandler = async (id, Own) => {\n\n\n        let like = await postService.like(token, id)\n\n\n        console.log(like.message);\n\n        if (like.message === \"Post updated\") {\n\n            let newPost = posts.map(p => {\n                if (p._id === id) {\n                    if (Own) {\n                        p.likes.splice(p.likes.indexOf(user.username), 1)\n                    }\n                    else {\n                        p.likes.push({ username: user.username })\n                    }\n                }\n                return p;\n            })\n            setPost(newPost);\n        }\n    }\n\n\n    const addFavHandler = async (id) => {\n        let fav = await postService.favorite(token, id)\n\n        if (fav === \"Post updated\") {\n            let newPost = posts.forEach(p => {\n                if (p._id === id) {\n                    if (p.favorites.includes(user.username)) {\n                        p.favorites.splice(p.favorites.indexOf(user.username), 1)\n                        disFavPost();\n                    }\n                    else {\n                        p.favorites.push(user.username)\n                        favPost();\n                    }\n                    return p;\n                }\n                setPost(newPost);\n            })\n        }\n\n    };\n\n    const toggleStatusHandler = async (id, showDelete) => {\n        let toggle = await postService.toggleActivePost(token, id);\n\n        if (toggle.message === \"Post updated\") {\n            let newPost = posts.map(p => {\n                if (p._id === id) {\n                    if (showDelete) {\n                        p.active = false;\n                        showDelete = true;\n                        togglePost();\n                    }\n                    else {\n                        p.active = true;\n                        showDelete = false;\n                        showPost();\n                    }\n                }\n                return p;\n            })\n            setPost(newPost)\n        }\n    };\n\n    const addCommentHandler = async (id, comment) => {\n        let comments = await postService.addComment(token, id, comment);\n\n        if (comments.message === \"Post updated\") {\n            commentPost();\n        }\n    }\n\n    const editPostHandler = (id, oldTitle, oldDescription, oldImage) => {\n\n        localStorage.setItem(\"idPost\", id)\n        localStorage.setItem(\"titlePost\", oldTitle)\n        localStorage.setItem(\"descriptionPost\", oldDescription)\n        localStorage.setItem(\"imagePost\", oldImage)\n\n        if(localStorage.getItem('username') !== null){\n            localStorage.removeItem('username')\n        }\n\n        navigate(\"/editpost\")\n    }\n    const CustomToastLogOut = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <VscDebugDisconnect className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Has cerrado la sesión</p>\n                </div>\n            </div>\n\n        )\n    }\n    const CustomToastToggle = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcLock className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Tu post se ha ocultado </p>\n                </div>\n            </div>\n\n        )\n    }\n    const CustomToastFav = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcRating className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Se ha agregado a favoritos </p>\n                </div>\n            </div>\n\n        )\n    }\n\n    const CustomToastDisFav = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcCancel className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Se ha eliminado de favoritos </p>\n                </div>\n            </div>\n\n        )\n    }\n\n\n\n\n    const CustomToastShow = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcUnlock className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Tu post es público nuevamente </p>\n                </div>\n            </div>\n\n        )\n    }\n    const CustomToastComment = () => {\n        return (\n            <div className={classes[\"toast-notification-container\"]}>\n                <div className={classes[\"toast-icon-notification-container\"]}>\n                    <FcApproval className=\"text-2xl m-auto \" />\n                </div>\n                <div className={classes[\"toast-notification-text-container\"]}>\n                    <p> Se ha publicado tu comentario </p>\n                </div>\n            </div>\n\n        )\n    }\n\n    const logoutUser = () => toast(<CustomToastLogOut />, { position: toast.POSITION.BOTTOM_CENTER });\n    const togglePost = () => toast(<CustomToastToggle />, { position: toast.POSITION.BOTTOM_CENTER });\n    const showPost = () => toast(<CustomToastShow />, { position: toast.POSITION.BOTTOM_CENTER });\n    const favPost = () => toast(<CustomToastFav />, { position: toast.POSITION.BOTTOM_CENTER });\n    const disFavPost = () => toast(<CustomToastDisFav />, { position: toast.POSITION.BOTTOM_CENTER });\n    const commentPost = () => toast(<CustomToastComment />, { position: toast.POSITION.BOTTOM_CENTER });\n\n    return (\n        <div className={classes[\"ownposts\"]}>\n            <header className={classes[\"header-ownposts\"]}>\n                <div className={classes[\"header-ownposts__logo\"]}>\n                    <img className={classes[\"logo-header\"]} src={solo_logo} alt=\"logo\" />\n                    <p className={classes[\"title-header\"]}> One Moment </p>\n                </div>\n                <div className={classes[\"logout-container\"]}>\n                    <h1 className={classes[\"user-title\"]}>Post hechos por: {localStorage.getItem(\"username\")}</h1>\n                    <button onClick={viewFavHandler}>\n                        <FaBookmark className=\"admin-icons home-icon mx-2 iphone:text-xl ipad:text-2xl laptop:text-5xl m-auto text-blue-500\" />\n                    </button>\n                    <button onClick={goBackHandler}>\n                        <RiArrowGoBackFill className=\"admin-icons home-icon mx-2 iphone:text-xl ipad:text-2xl laptop:text-5xl m-auto text-blue-500\" />\n                    </button>\n                    <button onClick={() => { logoutHandler(); logoutUser(); }}>\n                        <IoLogOutSharp className=\"admin-icons home-icon mx-2 iphone:text-xl ipad:text-2xl laptop:text-5xl m-auto text-red-500\" /></button>\n                </div>\n            </header>\n            <section className={classes[\"ownposts-container\"]}>\n                <section className={classes[\"ownposts-container-posts\"]}>\n                    {posts.map((post, index) => {\n                        if (posts.length === index + 1) {\n                            return (\n                                <div ref={lastPostRef}\n                                    key={post._id}\n                                >{post.title}</div>\n                            )\n                        } else {\n                            return (\n                                <Card\n                                    key={post._id}\n                                    {...post}\n                                    currentPostId={post._id}\n                                    token={token}\n                                    addLike={(own) => addLikeHandler(post._id, own)}\n                                    addFav={() => addFavHandler(post._id)}\n                                    toggleStatus={() => toggleStatusHandler(post._id, post.active)}\n                                    editPost={() => editPostHandler(post._id, post.title, post.description, post.image)}\n                                    addComment={(comment) => addCommentHandler(post._id, comment)}\n                                    typeRole={user.role}\n                                    userName={user.username}\n                                    currentUsername={user.username}\n                                    post_status={post.active}\n                                />\n                            )\n                        }\n                    })}\n                    <div>{loading && 'Loading...'}</div>\n                    <div>{error && 'Error'}</div>\n                </section>\n            </section>\n        </div>\n    )\n}","import { useUserContext } from './../../context/userContext';\nimport { Navigate } from 'react-router-dom';\n\nconst PrivateRoute = ({role=\"user\", children }) => {\n  const { token, user } = useUserContext();\n  \n  if(!token) return <Navigate replace to=\"/login\"/>;\n  if(!user || user.role !== role) return <Navigate replace to=\"/404\"/>;\n\n  return children;\n}\n\nexport default PrivateRoute;","import Login from './pages/Login/Login';\nimport RedirectPage from './pages/Redirect/RedirectPage';\nimport NotFound from './pages/NotFound/NotFound';\nimport Admin from './pages/Admin/Admin';\nimport User from './pages/User/User';\nimport UpdatePost from './pages/UpdatePost/UpdatePost';\nimport Favorites from './pages/Favorites/Favorites';\nimport OwnPosts from './pages/OwnPosts/OwnPosts';\n\nimport Private from './Components/Private/Private';\n\nimport './App.css';\n\nimport { HashRouter, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    < HashRouter>\n      <Routes>        \n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/redirect\" element={<RedirectPage />}/>\n\n        <Route path=\"/admin\"  element={<Private role=\"admin\"><Admin /></Private>} />\n        <Route path=\"/editpost\" element={<UpdatePost />} />\n        <Route path=\"/favorites\" element={<Favorites />} />\n        <Route path=\"/ownposts\" element={<OwnPosts />} />\n        <Route path=\"/user\"   element={<Private role=\"user\"> <User /> </Private>} />\n\n        <Route path=\"*\" element={<NotFound />}/>\n      </Routes>\n    </ HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { UserProvider } from './context/userContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}